#!/usr/bin/perl
#	$Id$

#
# Copyright (c) 2005 Inajima Daisuke All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the copyright holder may not be used to endorse or
#    promote products derived from this software without specific prior
#    written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

use strict;
use warnings;

my $pwd = `pwd`;
chomp $pwd;
my @files;
my $cflag = 0;
my $format = 'X';
my $lib = $0;
$lib =~ s#/[^/]*$#/Scripts/stuffit.scpt#;

my @argv;
while ($_ = shift @ARGV) {
    push(@argv, $_), next unless /^-(.*)/;
    my @options = split //, $1;
    
    foreach my $option (@options) {
	if    ($option eq 'c') { $cflag = 1 }
	elsif ($option eq 'f') { $format = shift @ARGV }
	else { print STDERR "Invalid option -$option\n"; exit 1 }
    }
}

unless (@argv) { usage() }

foreach (@argv) {
    $_ = "$pwd/$_" unless m#^/#;
}

my $script = <<EOF;
osascript <<eof
set libStuffit to load script "$lib" as POSIX file
StuffItPOSIX({${\join ',', map { qq("$_") } @argv}}, "$format", $cflag) of libStuffit
eof
EOF

system($script) == 0 or exit 1;

sub usage {
    print STDERR <<EOF;
usage: stuffit [-i] [-f 5|X] [-l b|f] [-p password] [-o dst] src [ ... src ]
EOF
    exit(1);
}

